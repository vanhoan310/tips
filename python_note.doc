1. Printing
  
	my_name = 'Zed A. Shaw'
  	my_age = 35 # not a lie 
  	my_height = 74 # inches 
  	print(f"Let's talk about {my_name}.")
  	print(f"If I add {my_age}, {my_height}, and {my_weight} I get {total}.")

2. Raise error
	if size < 0:
		raise ValueError('number must be non-negative')

3. Function argument

	As soon as you have a named argument, all arguments to the right of that need to be named arguments, too.

approximate_size(size=4000, False)
File "<stdin>", line 1
SyntaxError: non-keyword arg after keyword arg

4. Data structure
a) List
	
    • Slicing a list: a = [0, 1, 2, 3], a[0:2] = [0, 1]. a[-1] = 3
    • Reference: a[0] = 8, print(a) → [8, 1, 2, 3]
    • Adding items: 
1) a += a + [1, 3] → create a new list and MEMORY concern. 
      2) a.append(4) → add single element
      3) a.extend([4, 5]) → add one (more) elements
      4) a.insert(i, 7) → insert 7 at ith position(start from 0) in list. 
      
>>> a_list = ['a', 'b', 'c']
>>> a_list.extend(['d', 'e', 'f'])
1
>>> a_list
['a', 'b', 'c', 'd', 'e', 'f']
>>> len(a_list)
2
6
>>> a_list[-1]
'f'
>>> a_list.append(['g', 'h', 'i'])
3
>>> a_list
['a', 'b', 'c', 'd', 'e', 'f', ['g', 'h', 'i']]
>>> len(a_list)
4
7
>>> a_list[-1]
['g', 'h', 'i']
      
    • Remove item from list by index: del a[0] → delete first item.
    • Remove item by value: a.remove(8) will remove first 8 from list.
    • pop(index): remove and return value.
    • if(a) return TRUE if len(a) > 0 else FALSE
b) Set
    • Create a = {1,2,3}, a = set([1, 2, 3])
    • Create empty set a = set()
    • Modify: a.add(5) take a single element and duplicate values are ignored. 
    • Update a.update({2, 4, 5})//a.update([2, 4, 5])  remove the repetition.

c) Dictionary
    • a = {1: “One”, 2: [3, 4]}, len(a) → 2, 2 in a → True, 

